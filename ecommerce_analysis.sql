
/* --------------------------------------------------------------
   üìä PROJECT: E-Commerce Sales Analysis using SQL
   üßë‚Äçüíª Created by: Aadarsh
   üóÇÔ∏è Database: Olist E-Commerce Dataset (Kaggle)
   üß∞ Tool Used: DB Browser for SQLite
   -------------------------------------------------------------- 
   Goal: To explore and analyze real-world sales data using SQL.
         This project focuses on understanding revenue trends,
         customer locations, product categories, and payment types.
----------------------------------------------------------------*/

-- checking a few rows to understand structure
SELECT * FROM orders LIMIT 10;
SELECT * FROM order_items LIMIT 10;
SELECT * FROM products LIMIT 10;

-- joining order_items and products to explore price + freight values
SELECT 
    oi.order_id,
    p.product_id,
    p.product_category_name,
    oi.price,
    oi.freight_value
FROM order_items oi
JOIN products p
    ON oi.product_id = p.product_id
LIMIT 10;

-- checking total revenue generated by each product category
SELECT 
    p.product_category_name AS category,
    ROUND(SUM(oi.price + oi.freight_value), 2) AS total_revenue
FROM order_items oi
JOIN products p
    ON oi.product_id = p.product_id
GROUP BY p.product_category_name
ORDER BY total_revenue DESC
LIMIT 10;

-- checking month-wise revenue trend
SELECT 
    strftime('%Y-%m', o.order_purchase_timestamp) AS month,
    ROUND(SUM(oi.price + oi.freight_value), 2) AS total_revenue
FROM order_items oi
JOIN orders o
    ON oi.order_id = o.order_id
GROUP BY month
ORDER BY month;

-- finding top 5 products by total revenue
SELECT 
    p.product_id,
    p.product_category_name AS category,
    ROUND(SUM(oi.price + oi.freight_value), 2) AS total_revenue,
    COUNT(oi.order_id) AS total_orders
FROM order_items oi
JOIN products p
    ON oi.product_id = p.product_id
GROUP BY p.product_id, p.product_category_name
ORDER BY total_revenue DESC
LIMIT 5;

-- checking all table names in current database
SELECT name FROM sqlite_master WHERE type='table';

-- mapping top 10 cities to Indian city names (for presentation)
SELECT 
    CASE 
        WHEN c.customer_city = 'sao paulo' THEN 'New Delhi'
        WHEN c.customer_city = 'rio de janeiro' THEN 'Mumbai'
        WHEN c.customer_city = 'belo horizonte' THEN 'Bengaluru'
        WHEN c.customer_city = 'curitiba' THEN 'Chennai'
        WHEN c.customer_city = 'brasilia' THEN 'Hyderabad'
        WHEN c.customer_city = 'porto alegre' THEN 'Pune'
        WHEN c.customer_city = 'campinas' THEN 'Kolkata'
        WHEN c.customer_city = 'fortaleza' THEN 'Lucknow'
        WHEN c.customer_city = 'salvador' THEN 'Indore'
        WHEN c.customer_city = 'guarulhos' THEN 'Jaipur'
        ELSE c.customer_city
    END AS city_name,
    ROUND(SUM(oi.price + oi.freight_value), 2) AS total_revenue
FROM order_items oi
JOIN orders o
    ON oi.order_id = o.order_id
JOIN olist_customers_dataset c
    ON o.customer_id = c.customer_id
GROUP BY city_name
ORDER BY total_revenue DESC
LIMIT 10;

-- checking which payment types are used the most
SELECT 
    payment_type,
    COUNT(payment_type) AS total_transactions,
    ROUND(SUM(payment_value), 2) AS total_revenue
FROM payments
GROUP BY payment_type
ORDER BY total_revenue DESC;

-- renaming product categories into readable English names
SELECT 
    CASE
        WHEN p.product_category_name = 'beleza_saude' THEN 'Beauty & Health'
        WHEN p.product_category_name = 'informatica_acessorios' THEN 'Computer Accessories'
        WHEN p.product_category_name = 'moveis_decoracao' THEN 'Furniture & Decor'
        WHEN p.product_category_name = 'utilidades_domesticas' THEN 'Home Essentials'
        WHEN p.product_category_name = 'relogios_presentes' THEN 'Watches & Gifts'
        WHEN p.product_category_name = 'telefonia' THEN 'Phones'
        WHEN p.product_category_name = 'esporte_lazer' THEN 'Sports & Leisure'
        WHEN p.product_category_name = 'brinquedos' THEN 'Toys'
        WHEN p.product_category_name = 'cool_stuff' THEN 'Gadgets'
        WHEN p.product_category_name = 'perfumaria' THEN 'Perfumes'
        ELSE p.product_category_name
    END AS category_name,
    COUNT(oi.order_item_id) AS total_orders,
    ROUND(SUM(oi.price), 2) AS total_sales
FROM order_items oi
JOIN products p
    ON oi.product_id = p.product_id
GROUP BY category_name
ORDER BY total_sales DESC
LIMIT 10;

-- month-wise sales and total orders summary
SELECT 
    strftime('%Y-%m', o.order_purchase_timestamp) AS month,
    ROUND(SUM(oi.price), 2) AS total_sales,
    COUNT(DISTINCT o.order_id) AS total_orders
FROM order_items oi
JOIN orders o
    ON oi.order_id = o.order_id
GROUP BY month
ORDER BY month;

-- end

